version: '2.6'

services:

  psql:
    container_name: psql
    restart: 'no'

    image: postgres:14-alpine

    ports:
      - 5432:5432

    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=wrixy

    volumes:
      - psql:/var/lib/postgresql/data
      # - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

    networks:
      - backend

  # mongo:
    # container_name: mongo
    # restart: 'no'

    # image: mongo:5.0

    # ports:
      # - 27017:27017

    # environment:
      # - MONGO_INITDB_ROOT_USERNAME=root
      # - MONGO_INITDB_ROOT_PASSWORD=root

    # volumes:
      # - mongo:/data/db

    # networks:
      # - backend

  redis:
    container_name: redis
    restart: 'always'

    image: redis:6-alpine

    ports:
      - 6379:6379

    environment:
      - REDIS_ARGS="--requirepass root"

    volumes:
      - redis:/data

    networks:
      - cache

  api:
    container_name: api
    depends_on:
      - psql
      # - mongo
      - redis

    image: golang:1.18.0-alphine

    build:
      context: ../
      dockerfile: build/Dockerfile

    command: sh -c 'air -c .air.toml'

    ports:
      - 8000:8000

    environment:
      - DEBUG=TRUE
      - PSQL_URI=postgresql://root:root@psql:5432/wrixy
      # - MONGO_URI=mongodb://root:root@mongo:27017
      - REDIS_URI=redis://root@redis:6379/0
      - HOST_PORT=0.0.0.0:8000
      - JWT_SECRET_KEY=9b7e4f37-c86f-456c-ac81-9c9f63a1715d

    volumes:
      - ../:/app

    networks:
      - backend
      - cache


volumes:
  psql:
  # mongo:
  redis:


networks:
  backend:
  cache:
